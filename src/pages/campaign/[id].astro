---
import PrimaryLayout from "../../layouts/PrimaryLayout.astro";

// Jalankan sebagai SSR agar semua ID bisa diakses tanpa pre-render
export const prerender = false;

// Ambil campaign berdasarkan params id secara runtime
const API_URL = import.meta.env.PUBLIC_API_URL;
const { id } = Astro.params;

let campaign: any = null;
try {
  const res = await fetch(`${API_URL}/campaigns/${id}`);
  if (res.ok) {
    campaign = await res.json();
  }
} catch (e) {
  // noop; akan dialihkan ke 404 di bawah
}

// Jika campaign tidak ditemukan dari props, redirect ke halaman 404
if (!campaign) {
  console.warn(`Campaign not found in props, redirecting to /404...`);
  return Astro.redirect("/404");
}

// Fungsi helper untuk parsing tanggal yang aman
const parseDate = (dateString: string) => {
  if (!dateString) return null;

  // Coba berbagai format tanggal
  const date = new Date(dateString);
  if (!isNaN(date.getTime())) {
    return date;
  }

  // Jika format ISO tidak bekerja, coba format lain
  const isoDate = new Date(dateString.replace(/\//g, "-"));
  if (!isNaN(isoDate.getTime())) {
    return isoDate;
  }

  return null;
};

// Hitung hari tersisa dengan validasi
const today = new Date();
const endDate = parseDate(campaign.endDate);
let daysLeft = 0;

if (endDate) {
  const timeDiff = endDate.getTime() - today.getTime();
  daysLeft = Math.max(0, Math.ceil(timeDiff / (1000 * 3600 * 24)));
} else {
  console.warn("Invalid end date:", campaign.endDate);
}

// Persentase donasi terkumpul dengan validasi
const currentAmount = campaign.currentAmount || 0;
const targetAmount = campaign.targetAmount || 1;
const percentageFunded = Math.min(
  Math.round((currentAmount / targetAmount) * 100),
  100
);

// Cek status kampanye
const isCampaignEnded = daysLeft <= 0;
const isTargetReached = currentAmount >= targetAmount;
const isCampaignActive = !isCampaignEnded && !isTargetReached;

// Format mata uang ke Rupiah
const formatCurrency = (amount: number) => {
  const numAmount = Number(amount) || 0;
  return new Intl.NumberFormat("id-ID", {
    style: "currency",
    currency: "IDR",
    minimumFractionDigits: 0,
    maximumFractionDigits: 0,
  }).format(numAmount);
};

// Format tanggal dengan validasi
const formatDate = (dateString: string) => {
  const date = parseDate(dateString);
  if (!date) {
    return "Tanggal tidak valid";
  }

  return new Intl.DateTimeFormat("id-ID", {
    day: "numeric",
    month: "long",
    year: "numeric",
  }).format(date);
};
---

<PrimaryLayout>
  <section class="w-full relative max-w-6xl mx-auto">
    <div
      class="w-full h-[300px] md:h-[400px] lg:h-[500px] bg-gray-300 relative overflow-hidden"
    >
      <img
        src={campaign.imageUrl}
        alt={campaign.title}
        class="w-full h-full object-cover"
      />
      <div
        class="absolute inset-0 bg-gradient-to-t from-black/70 to-transparent flex items-end"
      >
        <div class="container mx-auto px-4 pb-8 md:pb-16">
          <span
            class="inline-block px-3 py-1 bg-blue-600 text-white text-sm rounded-full mb-4"
          >
            {campaign.category}
          </span>
          <h1
            class="text-white text-2xl md:text-4xl lg:text-5xl font-bold max-w-4xl"
          >
            {campaign.title}
          </h1>
        </div>
      </div>
    </div>
  </section>
  
  <!-- Campaign Status Banner -->
  {isCampaignEnded && (
    <section class="max-w-6xl mx-auto px-4 mt-4 mb-6">
      <div class="bg-red-50 border border-red-200 rounded-lg p-4">
        <div class="flex items-center">
                     <div class="flex-shrink-0">
             <svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
               <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
             </svg>
           </div>
          <div class="ml-3">
            <h3 class="text-sm font-medium text-red-800">
              Kampanye Telah Berakhir
            </h3>
            <div class="mt-2 text-sm text-red-700">
              <p>Periode penggalangan dana untuk kampanye ini telah berakhir pada {formatDate(campaign.endDate)}.</p>
            </div>
          </div>
        </div>
      </div>
    </section>
  )}
  
  {isTargetReached && !isCampaignEnded && (
    <section class="max-w-6xl mx-auto px-4 mt-4 mb-6">
      <div class="bg-green-50 border border-green-200 rounded-lg p-4">
        <div class="flex items-center">
                     <div class="flex-shrink-0">
             <svg class="h-5 w-5 text-green-400" viewBox="0 0 20 20" fill="currentColor">
               <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
             </svg>
           </div>
          <div class="ml-3">
            <h3 class="text-sm font-medium text-green-800">
              Target Donasi Tercapai! ðŸŽ‰
            </h3>
            <div class="mt-2 text-sm text-green-700">
              <p>Kampanye ini telah mencapai target donasi sebesar {formatCurrency(targetAmount)}. Terima kasih atas dukungan semua donatur!</p>
            </div>
          </div>
        </div>
      </div>
    </section>
  )}
  
  <section class="max-w-6xl mx-auto py-8">
    <div class="lg:flex lg:space-x-8">
      <!-- Campaign Details -->
      <div class="lg:w-2/3 px-2">
        <div class="mb-6 flex flex-col gap-4">
          <div class="flex gap-2 md:gap-4">
            <p class="text-gray-600">
              Berakhir dalam <span class="font-semibold">{daysLeft} hari</span>
            </p>
          </div>
          <div class="flex items-center gap-2 bg-gray-200 rounded py-4 px-2">
            <img
              src={campaign.organizationLogo
                ? campaign.organizationLogo
                : "/images/icons/user-default.svg"}
              alt="Profil Organisasi"
              class="h-10 w-auto"
            />
            <p class="text-gray-600">Dibuat oleh <span class="font-semibold text-blue-600">{campaign.organizationName}</span></p>
          </div>
        </div>
        <h2 class="text-2xl font-bold mb-4">Deskripsi Kampanye</h2>
        <p class="text-gray-600 mb-6">{campaign.description}</p>
        
        <!-- Related News Section -->
        <div id="related-news" class="mt-8">
          <h3 class="text-xl font-bold mb-4">Berita Terkait</h3>
          <div id="news-list" class="space-y-4">
            <!-- News items will be loaded here -->
          </div>
        </div>
      </div>
      
      <!-- Sticky Donation Card -->
      <div class="lg:w-1/3 px-2">
        <div class="sticky top-20">
          <div class="bg-white p-6 rounded-lg shadow-md">
            <div class="p-6">
              <h2 class="text-xl font-bold mb-4">Bantu Sekarang</h2>
              <div class="mb-4">
                <div class="flex justify-between text-sm mb-2">
                  <span class="font-semibold text-blue-600"
                    >{formatCurrency(campaign.currentAmount)}</span
                  >
                  <span class="text-gray-500"
                    >dari {formatCurrency(campaign.targetAmount)}</span
                  >
                </div>
                <div class="w-full bg-gray-200 rounded-full h-2.5">
                  <div
                    class="bg-blue-600 h-2.5 rounded-full"
                    style={`width: ${percentageFunded}%`}
                  >
                  </div>
                </div>
              </div>
            <div class="grid grid-cols-3 gap-2 mb-6 text-center">
              <div class="bg-gray-50 p-2 rounded">
                <p class="text-xs text-gray-500">Terkumpul</p>
                <p class="font-semibold text-gray-800">{percentageFunded}%</p>
              </div>
              <div class="bg-gray-50 p-2 rounded">
                <p class="text-xs text-gray-500">Donatur</p>
                <p class="font-semibold text-gray-800">
                  {campaign.donorCount || 0}
                </p>
              </div>
              <div class="bg-gray-50 p-2 rounded">
                <p class="text-xs text-gray-500">Sisa Hari</p>
                <p class="font-semibold text-gray-800">{daysLeft}</p>
              </div>
            </div>

            <!-- Donation Form -->
            <form id="donate-form" class="space-y-4" data-campaign-id={campaign._id}>
              {!isCampaignActive && (
                <div class="mb-4 p-3 bg-gray-100 rounded-md">
                  <p class="text-sm text-gray-600 text-center">
                    {isCampaignEnded 
                      ? "Kampanye ini telah berakhir dan tidak dapat menerima donasi lagi." 
                      : "Target donasi telah tercapai. Terima kasih atas dukungan semua donatur!"}
                  </p>
                </div>
              )}
              
              <div>
                <label for="donor-name" class="block text-sm font-medium text-gray-700">Nama Donatur</label>
                <input
                  type="text"
                  id="donor-name"
                  name="donor-name"
                  class="mt-1 py-3 px-4 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 disabled:bg-gray-100 disabled:cursor-not-allowed"
                  placeholder="Kosongkan jika ingin anonim"
                  disabled={!isCampaignActive}
                />
              </div>
              <div>
                <label for="donation-amount" class="block text-sm font-medium text-gray-700">Jumlah Donasi</label>
                <input
                  type="number"
                  id="donation-amount"
                  name="donation-amount"
                  min="1000"
                  step="1000"
                  class="mt-1 py-3 px-4 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 disabled:bg-gray-100 disabled:cursor-not-allowed"
                  required
                  disabled={!isCampaignActive}
                />
              </div>
              <div>
                <label for="payment-method" class="block text-sm font-medium text-gray-700">Metode Pembayaran</label>
                <select
                  id="payment-method"
                  name="payment-method"
                  class="mt-1 block py-3 px-4 w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 disabled:bg-gray-100 disabled:cursor-not-allowed"
                  required
                  disabled={!isCampaignActive}
                >
                  <option value="">Pilih metode pembayaran</option>
                  <option value="bank_transfer">Transfer Bank</option>
                  <option value="e_wallet">E-Wallet</option>
                </select>
              </div>
              <button
                type="submit"
                class={`w-full py-2 px-4 rounded-md transition duration-300 ${
                  isCampaignActive 
                    ? 'bg-blue-600 text-white hover:bg-blue-700' 
                    : 'bg-gray-400 text-gray-200 cursor-not-allowed'
                }`}
                disabled={!isCampaignActive}
              >
                {isCampaignActive ? 'Lanjut ke Pembayaran' : 'Kampanye Tidak Aktif'}
              </button>
            </form>
          </div>
        </div>
      </div>
    </div>
  </section>
</PrimaryLayout>

<script>

  const API_URL = import.meta.env.PUBLIC_API_URL;
  const generateUniqueCode = () => {
    return Math.floor(100 + Math.random() * 900); // Kode unik 3 digit (100-999)
  };

  async function initiatePayment(
    amount: number,
    campaignId: string,
    paymentMethod: string,
    donorName: string
  ) {
    const token = localStorage.getItem("token");
    if (!token) {
      alert("Silakan login untuk berdonasi.");
      return null;
    }

    try {
      const uniqueCode = generateUniqueCode();
      const totalAmount = amount + uniqueCode; // Menambahkan kode unik ke nominal donasi
      
      const response = await fetch(
        `${API_URL}/donations`,
        {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            Authorization: `Bearer ${token}`,
          },
          body: JSON.stringify({
            campaignId,
            amount: totalAmount, // Menggunakan total amount yang sudah termasuk kode unik
            paymentMethod,
            donorName: donorName || "Anonymous",
            isAnonymous: !donorName,
            message: "",
            uniqueCode,
          }),
        }
      );

      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.error || "Gagal memulai pembayaran");
      }

      const result = await response.json();
      window.location.href = `/payment/${result.donation.transactionId}`; // Alihkan ke halaman pembayaran dengan transactionId
      return result;
    } catch (error: unknown) {
      if (error instanceof Error) {
        console.error("Error initiating payment:", error.message);
      } else {
        console.error("An unknown error occurred during payment initiation");
      }
      return null;
    }
  }

  // Load related news for campaign
  async function loadRelatedNews(campaignId: string) {
    try {
      const response = await fetch(`${API_URL}/news/campaign/${campaignId}`);
      if (!response.ok) {
        throw new Error('Failed to fetch related news');
      }
      
      const data = await response.json();
      const newsList = document.getElementById('news-list');
      
      if (newsList && data.news && data.news.length > 0) {
        newsList.innerHTML = data.news.map((news: any) => `
          <div class="bg-white p-4 rounded-lg shadow-sm border">
            <div class="flex items-start space-x-3">
              <img 
                src="${news.image || '/images/empty-image-placeholder.webp'}" 
                alt="${news.title}"
                class="w-16 h-16 object-cover rounded"
              />
              <div class="flex-1">
                <h4 class="font-semibold text-gray-800 mb-1">
                  <a href="/news/${news.slug}" class="hover:text-blue-600 transition-colors">
                    ${news.title}
                  </a>
                </h4>
                <p class="text-sm text-gray-600 mb-2">
                  ${news.content.substring(0, 100)}${news.content.length > 100 ? '...' : ''}
                </p>
                <div class="flex items-center text-xs text-gray-500">
                  <span>${new Date(news.createdAt).toLocaleDateString('id-ID')}</span>
                  ${news.author?.nama ? `<span class="mx-2">â€¢</span><span>${news.author.nama}</span>` : ''}
                </div>
              </div>
            </div>
          </div>
        `).join('');
      } else if (newsList) {
        newsList.innerHTML = '<p class="text-gray-500 text-center py-4">Belum ada berita terkait untuk kampanye ini.</p>';
      }
    } catch (error) {
      console.error('Error loading related news:', error);
      const newsList = document.getElementById('news-list');
      if (newsList) {
        newsList.innerHTML = '<p class="text-gray-500 text-center py-4">Gagal memuat berita terkait.</p>';
      }
    }
  }

  window.addEventListener("load", () => {
    const donateForm = document.querySelector("#donate-form");
    if (donateForm) {
      console.log("Donate form found, adding event listener...");
      donateForm.addEventListener("submit", async (event) => {
        event.preventDefault();

        const amountInput = document.querySelector<HTMLInputElement>("#donation-amount");
        const paymentMethodInput = document.querySelector<HTMLSelectElement>("#payment-method");
        const donorNameInput = document.querySelector<HTMLInputElement>("#donor-name");

        if (!amountInput || !paymentMethodInput || !donorNameInput) {
          console.error("Required form elements not found");
          return;
        }

        const amount = Number(amountInput.value);
        const paymentMethod = paymentMethodInput.value;
        const donorName = donorNameInput.value;
        const campaignId = donateForm.getAttribute("data-campaign-id");

        if (amount < 1000) {
          alert("Minimum donasi adalah Rp 1.000");
          return;
        }

        if (!paymentMethod) {
          alert("Silakan pilih metode pembayaran.");
          return;
        }

        if (!campaignId) {
          alert("ID kampanye tidak ditemukan.");
          return;
        }

        const result = await initiatePayment(amount, campaignId, paymentMethod, donorName);
        console.log("Payment initiation response:", result);
      });
    } else {
      console.error("Form donasi tidak ditemukan di DOM");
    }

    // Load related news when page loads
    const campaignId = document.querySelector('#donate-form')?.getAttribute('data-campaign-id');
    if (campaignId) {
      loadRelatedNews(campaignId);
    }
  });
</script>
