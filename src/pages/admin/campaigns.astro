---
import AdminLayout from "../../layouts/AdminLayout.astro"
---

<AdminLayout title="Manage Campaigns">
  <!-- Page Header -->
  <div class="mb-6">
    <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between">
      <div>
        <h2 class="text-2xl font-bold text-gray-900 mb-2">Kelola Campaign</h2>
        <p class="text-gray-600">Kelola semua campaign donasi yang ada di platform</p>
      </div>
      <div class="mt-4 sm:mt-0">
        <a href="/create-campaign">
            <button class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg font-medium transition-colors duration-200">
              + Tambah Campaign
            </button>
        </a>
      </div>
    </div>
  </div>

  <!-- Filters and Search -->
  <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6">
    <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-2">Cari Campaign</label>
        <input
          type="text"
          id="searchInput"
          placeholder="Cari berdasarkan judul..."
          class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
        />
      </div>
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-2">Kategori</label>
        <select
          id="categoryFilter"
          class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
        >
          <option value="">Semua Kategori</option>
          <option value="kesehatan">Kesehatan</option>
          <option value="pendidikan">Pendidikan</option>
          <option value="bencana">Bencana Alam</option>
          <option value="sosial">Sosial</option>
        </select>
      </div>
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-2">Status</label>
        <select
          id="statusFilter"
          class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
        >
          <option value="">Semua Status</option>
          <option value="active">Aktif</option>
          <option value="completed">Selesai</option>
          <option value="expired">Berakhir</option>
        </select>
      </div>
      <div class="flex items-end">
        <button
          id="resetFilters"
          class="w-full bg-gray-100 hover:bg-gray-200 text-gray-700 px-4 py-2 rounded-lg font-medium transition-colors duration-200"
        >
          Reset Filter
        </button>
      </div>
    </div>
  </div>

  <!-- Loading State -->
  <div id="loadingState" class="bg-white rounded-lg shadow-sm border border-gray-200 p-8 text-center">
    <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
    <p class="text-gray-600">Memuat data campaign...</p>
  </div>

  <!-- Error State -->
  <div id="errorState" class="bg-white rounded-lg shadow-sm border border-gray-200 p-8 text-center hidden">
    <div class="text-red-500 mb-4">
      <svg class="h-12 w-12 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 1118 0z"></path>
      </svg>
    </div>
    <h3 class="text-lg font-medium text-gray-900 mb-2">Gagal Memuat Data</h3>
    <p class="text-gray-600 mb-4">Terjadi kesalahan saat mengambil data campaign.</p>
    <button
      id="retryButton"
      class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg font-medium transition-colors duration-200"
    >
      Coba Lagi
    </button>
  </div>

  <!-- Campaign Table -->
  <div id="campaignTable" class="bg-white rounded-lg shadow-sm border border-gray-200 hidden">
    <div class="px-6 py-4 border-b border-gray-200">
      <h3 class="text-lg font-semibold text-gray-900">Daftar Campaign</h3>
      <p class="text-sm text-gray-600 mt-1">Total: <span id="totalCampaigns">0</span> campaign</p>
    </div>
    
    <div class="overflow-x-auto">
      <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
          <tr>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Campaign</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Organisasi</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Target</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Progress</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Tanggal</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Aksi</th>
          </tr>
        </thead>
        <tbody id="campaignTableBody" class="bg-white divide-y divide-gray-200">
          <!-- Campaign rows will be inserted here -->
        </tbody>
      </table>
    </div>
    
    <!-- Pagination -->
    <div class="px-6 py-4 border-t border-gray-200">
      <div class="flex items-center justify-between">
        <div class="text-sm text-gray-700">
          Menampilkan <span id="showingFrom">1</span> - <span id="showingTo">10</span> dari <span id="totalItems">0</span> campaign
        </div>
        <div class="flex space-x-2">
          <button
            id="prevPage"
            class="px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed"
            disabled
          >
            Sebelumnya
          </button>
          <div id="pageNumbers" class="flex space-x-1">
            <!-- Page numbers will be inserted here -->
          </div>
          <button
            id="nextPage"
            class="px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed"
          >
            Selanjutnya
          </button>
        </div>
      </div>
    </div>
  </div>
</AdminLayout>

<script>
  // Campaign data and state
  let campaigns = [];
  let filteredCampaigns = [];
  let currentPage = 1;
  const itemsPerPage = 10;

  // DOM elements
  const loadingState = document.getElementById('loadingState');
  const errorState = document.getElementById('errorState');
  const campaignTable = document.getElementById('campaignTable');
  const campaignTableBody = document.getElementById('campaignTableBody');
  const searchInput = document.getElementById('searchInput');
  const categoryFilter = document.getElementById('categoryFilter');
  const statusFilter = document.getElementById('statusFilter');
  const resetFilters = document.getElementById('resetFilters');
  const retryButton = document.getElementById('retryButton');

  // Utility functions
  function formatCurrency(amount) {
    return new Intl.NumberFormat('id-ID', {
      style: 'currency',
      currency: 'IDR',
      minimumFractionDigits: 0
    }).format(amount);
  }

  function formatDate(dateString) {
    return new Date(dateString).toLocaleDateString('id-ID', {
      year: 'numeric',
      month: 'short',
      day: 'numeric'
    });
  }

  function getCampaignStatus(campaign) {
    const now = new Date();
    const endDate = new Date(campaign.endDate);
    
    if (endDate < now) {
      return { status: 'expired', label: 'Berakhir', class: 'bg-red-100 text-red-800' };
    } else if (campaign.currentAmount >= campaign.targetAmount) {
      return { status: 'completed', label: 'Selesai', class: 'bg-green-100 text-green-800' };
    } else {
      return { status: 'active', label: 'Aktif', class: 'bg-blue-100 text-blue-800' };
    }
  }

  function calculateProgress(current, target) {
    return Math.min((current / target) * 100, 100);
  }

  // Fetch campaigns from API
  async function fetchCampaigns() {
    try {
      showLoading();
      const response = await fetch('http://localhost:3000/api/campaigns');
      
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      
      const data = await response.json();
      campaigns = data;
      filteredCampaigns = [...campaigns];
      
      showTable();
      renderTable();
      updatePagination();
      
    } catch (error) {
      console.error('Error fetching campaigns:', error);
      showError();
    }
  }

  // State management
  function showLoading() {
    loadingState?.classList.remove('hidden');
    errorState?.classList.add('hidden');
    campaignTable?.classList.add('hidden');
  }

  function showError() {
    loadingState?.classList.add('hidden');
    errorState?.classList.remove('hidden');
    campaignTable?.classList.add('hidden');
  }

  function showTable() {
    loadingState?.classList.add('hidden');
    errorState?.classList.add('hidden');
    campaignTable?.classList.remove('hidden');
  }

  // Table rendering
  function renderTable() {
    if (!campaignTableBody) return;
    
    const startIndex = (currentPage - 1) * itemsPerPage;
    const endIndex = startIndex + itemsPerPage;
    const paginatedCampaigns = filteredCampaigns.slice(startIndex, endIndex);
    
    campaignTableBody.innerHTML = '';
    
    if (paginatedCampaigns.length === 0) {
      campaignTableBody.innerHTML = `
        <tr>
          <td colspan="7" class="px-6 py-8 text-center text-gray-500">
            Tidak ada campaign yang ditemukan
          </td>
        </tr>
      `;
      return;
    }
    
    paginatedCampaigns.forEach(campaign => {
      const status = getCampaignStatus(campaign);
      const progress = calculateProgress(campaign.currentAmount, campaign.targetAmount);
      
      const row = document.createElement('tr');
      row.className = 'hover:bg-gray-50';
      
      row.innerHTML = `
        <td class="px-6 py-4">
          <div class="flex items-center">
            <img
              src="${campaign.imageUrl || '/images/empty-image-placeholder.webp'}"
              alt="${campaign.title}"
              class="h-12 w-12 rounded-lg object-cover mr-4"
            />
            <div>
              <div class="text-sm font-medium text-gray-900 max-w-xs truncate">
                ${campaign.title}
              </div>
              <div class="text-sm text-gray-500 capitalize">
                ${campaign.category}
              </div>
            </div>
          </div>
        </td>
        <td class="px-6 py-4">
          <div class="flex items-center">
            <img
              src="${campaign.organizationLogo || '/images/icons/user-default.svg'}"
              alt="${campaign.organizationName}"
              class="h-8 w-8 rounded-full object-cover mr-3"
            />
            <div class="text-sm text-gray-900">
              ${campaign.organizationName}
            </div>
          </div>
        </td>
        <td class="px-6 py-4">
          <div class="text-sm text-gray-900 font-medium">
            ${formatCurrency(campaign.targetAmount)}
          </div>
        </td>
        <td class="px-6 py-4">
          <div class="w-full">
            <div class="flex justify-between text-sm text-gray-600 mb-1">
              <span>${formatCurrency(campaign.currentAmount)}</span>
              <span>${progress.toFixed(1)}%</span>
            </div>
            <div class="w-full bg-gray-200 rounded-full h-2">
              <div
                class="bg-blue-600 h-2 rounded-full transition-all duration-300"
                style="width: ${progress}%"
              ></div>
            </div>
          </div>
        </td>
        <td class="px-6 py-4">
          <span class="px-2 py-1 text-xs font-medium rounded-full ${status.class}">
            ${status.label}
          </span>
        </td>
        <td class="px-6 py-4 text-sm text-gray-500">
          <div>Mulai: ${formatDate(campaign.startDate)}</div>
          <div>Berakhir: ${formatDate(campaign.endDate)}</div>
        </td>
        <td class="px-6 py-4">
          <div class="flex space-x-2">
            <button
              onclick="viewCampaign('${campaign._id}')"
              class="text-blue-600 hover:text-blue-800 text-sm font-medium"
            >
              Lihat
            </button>
            <button
              onclick="editCampaign('${campaign._id}')"
              class="text-green-600 hover:text-green-800 text-sm font-medium"
            >
              Edit
            </button>
            <button
              onclick="deleteCampaign('${campaign._id}')"
              class="text-red-600 hover:text-red-800 text-sm font-medium"
            >
              Hapus
            </button>
          </div>
        </td>
      `;
      
      campaignTableBody.appendChild(row);
    });
    
    // Update total campaigns counter
    const totalCampaigns = document.getElementById('totalCampaigns');
    if (totalCampaigns) {
      totalCampaigns.textContent = filteredCampaigns.length;
    }
  }

  // Pagination
  function updatePagination() {
    const totalPages = Math.ceil(filteredCampaigns.length / itemsPerPage);
    const startItem = (currentPage - 1) * itemsPerPage + 1;
    const endItem = Math.min(currentPage * itemsPerPage, filteredCampaigns.length);
    
    // Update pagination info
    const showingFrom = document.getElementById('showingFrom');
    const showingTo = document.getElementById('showingTo');
    const totalItems = document.getElementById('totalItems');
    
    if (showingFrom) showingFrom.textContent = startItem;
    if (showingTo) showingTo.textContent = endItem;
    if (totalItems) totalItems.textContent = filteredCampaigns.length;
    
    // Update prev/next buttons
    const prevButton = document.getElementById('prevPage');
    const nextButton = document.getElementById('nextPage');
    
    if (prevButton) {
      prevButton.disabled = currentPage === 1;
    }
    
    if (nextButton) {
      nextButton.disabled = currentPage === totalPages;
    }
  }

  // Filtering
  function applyFilters() {
    const searchTerm = searchInput?.value.toLowerCase() || '';
    const categoryValue = categoryFilter?.value || '';
    const statusValue = statusFilter?.value || '';
    
    filteredCampaigns = campaigns.filter(campaign => {
      const matchesSearch = campaign.title.toLowerCase().includes(searchTerm) ||
                           campaign.organizationName.toLowerCase().includes(searchTerm);
      
      const matchesCategory = !categoryValue || campaign.category === categoryValue;
      
      let matchesStatus = true;
      if (statusValue) {
        const campaignStatus = getCampaignStatus(campaign).status;
        matchesStatus = campaignStatus === statusValue;
      }
      
      return matchesSearch && matchesCategory && matchesStatus;
    });
    
    currentPage = 1;
    renderTable();
    updatePagination();
  }

  // Action handlers
  function viewCampaign(id) {
    window.location.href = `/admin/campaign/${id}`;
  }

  function editCampaign(id) {
    window.location.href = `/admin/campaign/${id}/edit`;
  }

  function deleteCampaign(id) {
    if (confirm('Apakah Anda yakin ingin menghapus campaign ini?')) {
      // TODO: Implement delete functionality
      console.log('Delete campaign:', id);
    }
  }

  // Event listeners
  document.addEventListener('DOMContentLoaded', () => {
    // Initial fetch
    fetchCampaigns();
    
    // Search and filter listeners
    searchInput?.addEventListener('input', applyFilters);
    categoryFilter?.addEventListener('change', applyFilters);
    statusFilter?.addEventListener('change', applyFilters);
    
    // Reset filters
    resetFilters?.addEventListener('click', () => {
      if (searchInput) searchInput.value = '';
      if (categoryFilter) categoryFilter.value = '';
      if (statusFilter) statusFilter.value = '';
      applyFilters();
    });
    
    // Retry button
    retryButton?.addEventListener('click', fetchCampaigns);
    
    // Pagination
    document.getElementById('prevPage')?.addEventListener('click', () => {
      if (currentPage > 1) {
        currentPage--;
        renderTable();
        updatePagination();
      }
    });
    
    document.getElementById('nextPage')?.addEventListener('click', () => {
      const totalPages = Math.ceil(filteredCampaigns.length / itemsPerPage);
      if (currentPage < totalPages) {
        currentPage++;
        renderTable();
        updatePagination();
      }
    });
  });

  // Make functions globally available
  window.viewCampaign = viewCampaign;
  window.editCampaign = editCampaign;
  window.deleteCampaign = deleteCampaign;
</script>