---
import AdminLayout from "../../../layouts/AdminLayout.astro";
---

<AdminLayout title="Kelola User">
    <div class="container mx-auto px-4 py-8">
        <div class="flex justify-between items-center mb-8">
            <button id="openModalBtn" class="bg-blue-600 hover:bg-blue-700 text-white px-8 py-2 rounded-md">
                + Tambah User
            </button>
        </div>

        <div id="error-container" class="hidden bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
            <strong class="font-bold">Error!</strong>
            <span id="error-message" class="block sm:inline"></span>
        </div>

        <div id="loading" class="text-center py-8">
            <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900 mx-auto"></div>
            <p class="mt-2 text-gray-600">Memuat data...</p>
        </div>

        <!-- Modal Tambah User -->
        <div id="addUserModal" class="hidden fixed inset-0 bg-gray-600/50 overflow-y-auto items-center justify-center h-full w-full">
            <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
                <div class="mt-3">
                    <h3 class="text-lg font-medium leading-6 text-gray-900 mb-4">Tambah User Baru</h3>
                    <form id="addUserForm" class="space-y-4">
                        <div>
                            <label for="nama" class="block text-sm font-medium text-gray-700">Nama Lengkap</label>
                            <input type="text" id="nama" name="nama" required
                                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                        </div>
                        <div>
                            <label for="username" class="block text-sm font-medium text-gray-700">Username</label>
                            <input type="text" id="username" name="username" required
                                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                        </div>
                        <div>
                            <label for="email" class="block text-sm font-medium text-gray-700">Email</label>
                            <input type="email" id="email" name="email" required
                                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                        </div>
                        <div>
                            <label for="nomorHp" class="block text-sm font-medium text-gray-700">Nomor HP</label>
                            <input type="tel" id="nomorHp" name="nomorHp" required
                                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                        </div>
                        <div>
                            <label for="password" class="block text-sm font-medium text-gray-700">Password</label>
                            <input type="password" id="password" name="password" required
                                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                        </div>
                        <div>
                            <label for="role" class="block text-sm font-medium text-gray-700">Role</label>
                            <select id="role" name="role" required
                                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                                <option value="user">User</option>
                                <option value="admin">Admin</option>
                            </select>
                        </div>
                        <div class="flex justify-end space-x-3 mt-6">
                            <button type="button" id="closeModalBtn"
                                class="bg-gray-200 text-gray-800 px-4 py-2 rounded-md hover:bg-gray-300">
                                Batal
                            </button>
                            <button type="submit"
                                class="bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700">
                                Simpan
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div id="user-table" class="hidden">
            <div class="bg-white shadow-md rounded-lg overflow-hidden">
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Nama</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Username</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Email</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">No. HP</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Role</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Aksi</th>
                            </tr>
                        </thead>
                        <tbody id="user-table-body" class="bg-white divide-y divide-gray-200">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div id="no-data" class="hidden text-center py-8 text-gray-600">
            Tidak ada data user yang ditemukan.
        </div>
    </div>
</AdminLayout>

<script>
    interface User {
        _id: string;
        nama: string;
        username: string;
        email: string;
        nomorHp: string;
        role: 'admin' | 'user';
        alamat?: string;
        createdAt: string;
        updatedAt: string;
    }

    interface NewUser {
        nama: string;
        username: string;
        email: string;
        password: string;
        nomorHp: string;
        role: 'admin' | 'user';
    }

    const token = localStorage.getItem('token');
    const errorContainer = document.getElementById('error-container')!;
    const errorMessage = document.getElementById('error-message')!;
    const loading = document.getElementById('loading')!;
    const userTable = document.getElementById('user-table')!;
    const userTableBody = document.getElementById('user-table-body')!;
    const noData = document.getElementById('no-data')!;
    const modal = document.getElementById('addUserModal')!;
    const openModalBtn = document.getElementById('openModalBtn')!;
    const closeModalBtn = document.getElementById('closeModalBtn')!;
    const addUserForm = document.getElementById('addUserForm') as HTMLFormElement;

    // Modal functions
    openModalBtn.addEventListener('click', () => {
        modal.classList.remove('hidden');
        modal.classList.add('flex');
    });

    closeModalBtn.addEventListener('click', () => {
        modal.classList.remove('flex');
        modal.classList.add('hidden');
        addUserForm.reset();
    });

    // Close modal when clicking outside
    modal.addEventListener('click', (e) => {
        if (e.target === modal) {
            modal.classList.add('hidden');
            addUserForm.reset();
        }
    });

    // Add new user function
    async function addUser(userData: NewUser) {
        try {
            const response = await fetch('http://localhost:3000/api/auth/register-admin', {
                method: 'POST',
                headers: {
                    'Authorization': `Bearer ${token}`,
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(userData)
            });

            if (!response.ok) {
                const error = await response.json();
                throw new Error(error.error || 'Gagal menambahkan user');
            }

            await fetchUsers(); // Refresh table
            modal.classList.add('hidden');
            addUserForm.reset();
            alert('User berhasil ditambahkan!');
        } catch (error) {
            console.error('Error adding user:', error);
            alert(error instanceof Error ? error.message : 'Gagal menambahkan user');
        }
    }

    // Handle form submission
    addUserForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        const formData = new FormData(addUserForm);
        const userData: NewUser = {
            nama: formData.get('nama') as string,
            username: formData.get('username') as string,
            email: formData.get('email') as string,
            password: formData.get('password') as string,
            nomorHp: formData.get('nomorHp') as string,
            role: formData.get('role') as 'admin' | 'user'
        };
        await addUser(userData);
    });

    async function fetchUsers() {
        try {
            const response = await fetch('http://localhost:3000/api/users', {
                headers: {
                    'Authorization': `Bearer ${token}`,
                    'Content-Type': 'application/json'
                }
            });

            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }

            const users = await response.json() as User[];

            if (users.length === 0) {
                loading.classList.add('hidden');
                noData.classList.remove('hidden');
                return;
            }

            const userRows = users.map((user: User) => `
                <tr>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${user.nama}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${user.username}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${user.email}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${user.nomorHp}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                        <span class="px-2 py-1 text-xs font-semibold rounded-full ${user.role === 'admin' ? 'bg-purple-100 text-purple-800' : 'bg-green-100 text-green-800'}">
                            ${user.role}
                        </span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                        <button class="text-indigo-600 hover:text-indigo-900 mr-3">Edit</button>
                        <button class="text-red-600 hover:text-red-900">Hapus</button>
                    </td>
                </tr>
            `).join('');

            userTableBody.innerHTML = userRows;
            loading.classList.add('hidden');
            userTable.classList.remove('hidden');
        } catch (error) {
            console.error('Error fetching users:', error);
            errorMessage.textContent = error instanceof Error ? error.message : 'An unknown error occurred';
            errorContainer.classList.remove('hidden');
            loading.classList.add('hidden');
        }
    }

    // Fetch users when the page loads
    fetchUsers();
</script>
